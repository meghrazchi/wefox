tags:
- name: users
  description: users API

paths:
# [GET] users
  /users:
    get:
      tags:
      - users
      summary: Find All Users
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

# [POST] users
    post:
      tags:
      - users
      summary: Add User
      parameters:
      - name: body
        in: body
        description: user Data
        required: true
        schema:
          $ref: '#/definitions/users'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [GET] users/id
  /users/{id}:
    get:
      tags:
      - users
      summary: Find User By Id
      parameters:
      - name: id
        in: path
        description: User Id
        required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [PUT] users/id
    put:
      tags:
      - users
      summary: Update User By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
      - name: body
        in: body
        description: user Data
        required: true
        schema:
          $ref: '#/definitions/users'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [DELETE] users/id
    delete:
      tags:
      - users
      summary: Delete User By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  # [POST] login
  /login:
    post:
      tags:
        - auth
      summary: login user
      parameters:
        - name: body
          in: body
          description: user Data
          required: true
          schema:
            $ref: '#/definitions/users'
      responses:
        200:
          description: 'Success'
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [POST] weather
  /address:
    post:
      tags:
        - addresses
      summary: Address validation
      parameters:
        - name: body
          in: body
          description: address Data
          required: true
          schema:
            $ref: '#/definitions/address'
      responses:
        200:
          description: 'Success'
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [POST] weather
  /weather:
    post:
      tags:
        - weathers
      summary: Current Weather With Address
      parameters:
        - name: body
          in: body
          description: address Data
          required: true
          schema:
            $ref: '#/definitions/address'
      responses:
        200:
          description: 'Success'
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [POST] weather/current
  /weather/current:
    post:
      tags:
        - weathers
      summary: Current Weather
      parameters:
        - name: body
          in: body
          description: weather Data
          required: true
          schema:
            $ref: '#/definitions/weathers'
      responses:
        200:
          description: 'Success'
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# definitions
definitions:
  users:
    type: object
    required:
      - email
      - password
    properties:
      id:
        description: user Id
      email:
        type: string
        description: user Email
      password:
        type: string
        description: user Password

  weathers:
    type: object
    required:
      - address
    properties:
      address:
        description: Berlin

  address:
    type: object
    required:
      - street
      - streetNumber
      - town
      - postalCode
      - country
    properties:
      street:
        type: string
        description: street
      streetNumber:
        type: number
        description: streetNumber
      town:
        type: string
        description: town
      postalCode:
        type: number
        description: postalCode
      country:
        type: string
        description: country


schemes:
 - https
 - http
